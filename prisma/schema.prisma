// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model interaction {
  id     Int    @id @unique @default(autoincrement())
  userid String
  chatid String
  name   String
  chats  chat[]
}

model userSettings {
  id       Int    @id @unique @default(autoincrement())
  userid   String @unique
  username String
  language String
  gpt      String
  response String
}

model currentInteraction {
  id                 Int    @id @unique @default(autoincrement())
  userid             String @unique
  currentInteraction Int
}

model chat {
  id            Int         @id @unique @default(autoincrement())
  userid        String
  prompt        String
  response      String
  interaction   interaction @relation(fields: [interactionId], references: [id])
  interactionId Int
}

model currentAssitant {
  id       Int    @id @unique @default(autoincrement())
  userid   String @unique
  chatMode String
}

//  subscription schema

model userPurchasedToken {
  id     Int    @id @unique @default(autoincrement())
  userid String @unique
  token  Int    @default(10000)
}

model Subscription {
  id     Int       @id @unique @default(autoincrement())
  userid String    @unique
  status SubStatus @default(wait_accept)
}

model userOrders {
  id      Int    @id @default(autoincrement())
  userid  String
  orderid String @unique
}

enum SubStatus {
  wait_accept
  cancel_by_merchant
  active
  cancel_by_user
}

enum Status {
  confirm_check
  paid
  paid_over
  wrong_amount
  cancel
  system_fail
  refund_process
  refund_fail
  refund_paid
}
